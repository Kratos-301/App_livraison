{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krato\\\\Desktop\\\\app_livraison\\\\frontend\\\\src\\\\client\\\\pages\\\\VerifGPS.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VerifGPS = () => {\n  _s();\n  const [gpsActif, setGpsActif] = useState(true);\n  const verifierGPS = () => {\n    if (!navigator.geolocation) {\n      setGpsActif(false); // Le navigateur ne prend pas en charge la géolocalisation\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(() => setGpsActif(true),\n    // ✅ GPS disponible\n    () => setGpsActif(false),\n    // ❌ GPS refusé/désactivé\n    {\n      timeout: 3000\n    } // attends 3s maximum\n    );\n  };\n  useEffect(() => {\n    verifierGPS(); // Vérifie une première fois\n\n    // Vérifie toutes les 5 secondes\n    const interval = setInterval(verifierGPS, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !gpsActif && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"error-gps\",\n      style: {\n        color: 'red',\n        fontWeight: 'bold',\n        margin: '10px 0'\n      },\n      children: \"\\u274C Veuillez activer votre GPS pour utiliser le service.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(VerifGPS, \"CzyhrKMCmblvBJ09gu+lvPAabIE=\");\n_c = VerifGPS;\nexport default VerifGPS;\nvar _c;\n$RefreshReg$(_c, \"VerifGPS\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifGPS","_s","gpsActif","setGpsActif","verifierGPS","navigator","geolocation","getCurrentPosition","timeout","interval","setInterval","clearInterval","children","id","style","color","fontWeight","margin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/krato/Desktop/app_livraison/frontend/src/client/pages/VerifGPS.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst VerifGPS = () => {\r\n  const [gpsActif, setGpsActif] = useState(true);\r\n\r\n  const verifierGPS = () => {\r\n    if (!navigator.geolocation) {\r\n      setGpsActif(false); // Le navigateur ne prend pas en charge la géolocalisation\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      () => setGpsActif(true),     // ✅ GPS disponible\r\n      () => setGpsActif(false),    // ❌ GPS refusé/désactivé\r\n      { timeout: 3000 }            // attends 3s maximum\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifierGPS(); // Vérifie une première fois\r\n\r\n    // Vérifie toutes les 5 secondes\r\n    const interval = setInterval(verifierGPS, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!gpsActif && (\r\n        <div id=\"error-gps\" style={{ color: 'red', fontWeight: 'bold', margin: '10px 0' }}>\r\n          ❌ Veuillez activer votre GPS pour utiliser le service.\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerifGPS;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACC,SAAS,CAACC,WAAW,EAAE;MAC1BH,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;MACpB;IACF;IAEAE,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC,MAAMJ,WAAW,CAAC,IAAI,CAAC;IAAM;IAC7B,MAAMA,WAAW,CAAC,KAAK,CAAC;IAAK;IAC7B;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAY;IAC/B,CAAC;EACH,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdU,WAAW,CAAC,CAAC,CAAC,CAAC;;IAEf;IACA,MAAMK,QAAQ,GAAGC,WAAW,CAACN,WAAW,EAAE,IAAI,CAAC;IAC/C,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACG,CAACV,QAAQ,iBACRL,OAAA;MAAKgB,EAAE,EAAC,WAAW;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,UAAU,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAL,QAAA,EAAC;IAEnF;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACN,gBACD,CAAC;AAEP,CAAC;AAACpB,EAAA,CAjCID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}